1. make reading of first line: durationOfSim, numberOfintersections, numberOfStreets numberOfCars, bonusPoint

2. make line readings of numberOfStreets: startOfstreet and endOfstreet, nameOfStreet, timeToEndStreet

3. make line readings of numberOfCars: numberOfStreetCarWant, nameOfStreet ...

4. hash table ==> car1 as key, list of street as value

5. hash table ==> nameOfStreet as key, tuple of startOfstreet, endOfstreet, timeToEndStreet

6. hash table ==> startOfstreet as key,  list of endOfstreet as value




xxx Find minimumpath(dijktra algo) for each car

Find sumOfTimeConsumtion  for each car

Rank cars have shorest path

open green light for them




T = 0 all red light for each intersection
T = 1 one of incoming streets green light(take timeToEndStreet-1 for car) for each intersection
T = 2 another of incoming streets green light and the others are red  for each intersection
.
.
.
for T loop:
    for each intersection:
        if T = 0:
            all red
        else:
            if car in rank:
                give green light
            
